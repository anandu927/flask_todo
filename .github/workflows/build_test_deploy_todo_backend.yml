name: Build,Test And Deploy Todo Backend

on:
  push:
    branches:
      - main
    paths:
      - 'todo-app-backend/**'

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history to enable tag creation
          
      - name: Build and test Docker image
        run: |
         cd todo-app-backend/

         docker build -t todo_app:latest .
         docker run --name todo_app -e ALLOWED_ORIGIN=http://localhost:3000 -d -p 5000:5000 todo_app:latest
         
         sleep 10
    
         bash check-response.sh

         docker stop todo_app
     
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: dockerwave21/todo_app
          tags: latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: todo-app-backend
          file: todo-app-backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Deploy Docker Image to Render
        run: curl ${{ secrets.DEPLOY_URL }}
          
#       - name: Initialize Git
#         run: |
#           git init
#           git config user.name ${{ secrets.NAME }}
#           git config user.email ${{ secrets.EMAIL }}

#       - name: Exclude Folder
#         run: |
#           rm -rf todo-app-frontend/  

#       - name: Create Tag
#         run: |
#           git config user.name ${{ secrets.NAME }}
#           git config user.email ${{ secrets.EMAIL }}
#           git add -A
#           git commit -m "Exclude folder"
#           git tag -a v1.0.0 -m "Version 1.0.0"
#           git push --tags https://anandu927:${{ secrets.TOKEN }}@github.com/${{ github.repository }}.git
#           git push https://anandu927:${{ secrets.TOKEN }}@github.com/${{ github.repository }}.git
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
          
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           path: '!todo-app-frontend'
          
#       - name: Build project 
#         run: |
#           zip -r todo-app-backend.zip todo-app-backend
          
          
#       - name: Get Commit SHA
#         id: commit_sha
#         run: echo "::set-output name=sha::$(git rev-parse --short=7 HEAD)"
        
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         with:
#           tag_name: ${{ steps.commit_sha.outputs.sha }}
#           release_name: Release ${{ steps.commit_sha.outputs.sha }}
#           draft: false
#           prerelease: false
#       - name: Upload Release Asset
#         id: upload-release-asset 
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#           asset_path: ./todo-app-backend.zip
#           asset_name: todo-app-backend.zip
#           asset_content_type: application/zip
